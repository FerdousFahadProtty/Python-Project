import tkinter as tk  # Import the tkinter library for creating GUI applications

# Create the main application window
root = tk.Tk()
root.title("Unit Converter")  # Set the title of the window

# ======================
# FUNCTION DEFINITIONS
# ======================

# Function to clear/reset all input and output fields
def clearscreen():
    # Reset the selected options in both dropdown menus
    selectedOptn1.set("select unit")
    selectedOptn2.set("select unit")

    # Enable the output field temporarily to clear it
    outputNumArea.config(state="normal")
    outputNumArea.delete(0, tk.END)  # Clear the output field
    outputNumArea.config(state="disabled")  # Disable it again

    # Clear the input number field
    inputNumArea.delete(0, tk.END)

# Function to convert the input value from one unit to another
def convertUnit(unit1, unit2, length):
    # Perform the conversion using the ratio of units (all relative to cm)
    result = int(length) * (unitOptions[unit1] / unitOptions[unit2])

    # Enable the output field to insert the result
    outputNumArea.config(state="normal")
    outputNumArea.insert(0, f"{result}")  # Insert the result into the field
    outputNumArea.config(state="disabled")  # Disable it to prevent editing

    print(result)  # Print the result in the console (for debugging or logging)

# ======================
# UNIT CONVERSION VALUES
# ======================

# Dictionary mapping each unit to its equivalent in centimeters (cm)
unitOptions = {
    'mm': 0.1,
    'cm': 1,
    'm': 100,
    'km': 100000,
    'in': 2.54,
    'ft': 30.48,
    'yd': 91.44,
    'mi': 160934
}

# ======================
# GUI WIDGETS AND LAYOUT
# ======================

# Label asking the user to enter the number
labeltext1 = tk.Label(root, text='Enter Meters in Number', padx=10, pady=10)
labeltext1.grid(row=0, column=0)

# Entry box for the user to input the number to convert
inputNumArea = tk.Entry(root)
inputNumArea.grid(row=0, column=1)

# Dropdown menu for selecting the input unit
selectedOptn1 = tk.StringVar(root)
selectedOptn1.set("select unit")  # Default option shown
selectBox1 = tk.OptionMenu(root, selectedOptn1, *unitOptions.keys())
selectBox1.grid(row=0, column=2)

# Label for the output field
labeltext2 = tk.Label(root, text="  Converted Output Number")
labeltext2.grid(row=0, column=3)

# Output field to display the converted result (disabled so user can't edit it)
outputNumArea = tk.Entry(root)
outputNumArea.grid(row=0, column=4)
outputNumArea.config(state="disabled")  # Make it read-only

# Dropdown menu for selecting the output unit
selectedOptn2 = tk.StringVar(root)
selectedOptn2.set("select unit")
selectBox1 = tk.OptionMenu(root, selectedOptn2, *unitOptions.keys())
selectBox1.grid(row=0, column=5)

# Button to perform the unit conversion when clicked
convertButton = tk.Button(
    root,
    text='Convert',
    padx=5,
    pady=5,
    command=lambda: convertUnit(selectedOptn1.get(), selectedOptn2.get(), inputNumArea.get())
)
# Place the button with horizontal stretch (sticky='ew') and spanning two columns
convertButton.grid(row=1, column=1, columnspan=2, sticky="ew")

# Button to clear all fields when clicked
clearButton = tk.Button(
    root,
    text="Clear",
    padx=5,
    pady=5,
    command=clearscreen  # No () so it runs only when clicked
)
clearButton.grid(row=1, column=3, columnspan=2, sticky="ew")

# Run the Tkinter event loop to show the window and wait for user interaction
root.mainloop()
